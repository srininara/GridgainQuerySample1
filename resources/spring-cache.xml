<?xml version="1.0" encoding="UTF-8"?>

<!--
    _________        _____ __________________        _____
    __  ____/___________(_)______  /__  ____/______ ____(_)_______
    _  / __  __  ___/__  / _  __  / _  / __  _  __ `/__  / __  __ \
    / /_/ /  _  /    _  /  / /_/ /  / /_/ /  / /_/ / _  /  _  / / /
    \____/   /_/     /_/   \_,__/   \____/   \__,_/  /_/   /_/ /_/

    @xml.file.header
    Version: @xml.file.version
-->

<!--
    GridGain Spring configuration file to startup grid cache.

    When starting a standalone GridGain node, you need to execute the following command:
    {GRIDGAIN_HOME}/bin/ggstart.{bat|sh} path-to-this-file/spring-cache.xml

    When starting GridGain from Java IDE, pass path to this file into GridFactory:
    GridFactory.start("path-to-this-file/spring-benchmark.xml");
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
    <!--
        Optional description.
    -->
    <description>
        Spring file for grid configuration with benchmark.
    </description>

    <!--
        Configuration below demonstrates how to setup caches within grid nodes.
    -->
    <bean id="grid.cfg" class="org.gridgain.grid.GridConfigurationAdapter" scope="singleton">
        <property name="deploymentMode" value="SHARED"/>

        <!-- Set to local host address just for examples. -->
        <property name="localHost" value="127.0.0.1"/>

        <!--
            Allow indexing SPI to index primitive values.
        -->
        <property name="indexingSpi">
            <list>
                <bean class="org.gridgain.grid.spi.indexing.h2.GridH2IndexingSpi">
                    <!-- Index primitives. -->
                    <property name="defaultIndexPrimitiveKey" value="true"/>

                    <!--
                        Set to false to allow different key types for one value type.

                        Note that this also means that '_key' column cannot participate in
                        where clause queries either directly through API, through JDBC driver,
                        or through Object Viewer in Visor Devops Console.
                    -->
                    <property name="defaultIndexFixedTyping" value="false"/>
                </bean>
            </list>
        </property>

        <property name="cacheConfiguration">
            <!--
                Specify list of cache configurations here. Any property from
                GridCacheConfiguration interface can be configured here.
                Note that absolutely all configuration properties are optional.
            -->
            <list>
                <!--
                    Partitioned cache example configuration.
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfigurationAdapter">
                    <property name="name" value="partitioned"/>

                    <property name="cacheMode" value="PARTITIONED"/>

                    <!-- Initial cache size. -->
                    <property name="startSize" value="10"/>

                    <!--
                        Setting this to true will cause local node to wait for remote commits.
                        However, it's important to set it to true in the examples as we assert on
                        conditions that usually assume full completion of transactions on all nodes.
                    -->
                    <property name="synchronousCommit" value="true"/>

                    <!--
                        Optional eviction policy.
                    -->
                    <property name="evictionPolicy">
                        <bean class="org.gridgain.grid.cache.eviction.lru.GridCacheLruEvictionPolicy">
                            <property name="maxSize" value="10000"/>
                        </bean>
                    </property>

                    <!--
                        This shows how to configure number of backups. The below configuration
                        sets the number of backups to 1 (which is default).
                    -->
                    <property name="affinity">
                        <bean class="org.gridgain.grid.cache.affinity.partitioned.GridCachePartitionedAffinity">
                            <property name="keyBackups" value="1"/>
                        </bean>
                    </property>

                    <!-- Set synchronous preloading (default is asynchronous). -->
                    <property name="preloadMode" value="SYNC"/>

                    <!--
                        Turn on per-entry metrics calculation.
                    -->
                    <property name="perEntryMetricsEnabled" value="true"/>
                </bean>

                <!--
                    Replicated cache example configuration.
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfigurationAdapter">
                    <!-- Cache name is 'replicated'. -->
                    <property name="name" value="replicated"/>

                    <!--
                        Setting this to true will cause local node to wait for remote commits.
                        However, it's important to set it to true in the examples as we assert on
                        conditions that usually assume full completion of transactions on all nodes.
                    -->
                    <property name="synchronousCommit" value="true"/>

                    <!-- REPLICATED cache mode. -->
                    <property name="cacheMode" value="REPLICATED"/>

                    <!-- Set synchronous preloading (default is asynchronous). -->
                    <property name="preloadMode" value="SYNC"/>

                    <!-- Initial cache size. -->
                    <property name="startSize" value="20"/>

                    <!--
                        Turn on per-entry metrics calculation.
                    -->
                    <property name="perEntryMetricsEnabled" value="true"/>
                </bean>

                <!--
                    Local cache example configuration.
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfigurationAdapter">
                    <!-- Cache name is 'local'. -->
                    <property name="name" value="local"/>

                    <!-- LOCAL cache mode. -->
                    <property name="cacheMode" value="LOCAL"/>

                    <!-- Initial cache size. -->
                    <property name="startSize" value="20"/>

                    <!--
                        Turn on per-entry metrics calculation.
                    -->
                    <property name="perEntryMetricsEnabled" value="true"/>
                </bean>
            </list>
        </property>

        <!--
            Uncomment this to provide TCP discovery SPI (Amazon EC2).
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.s3.GridTcpDiscoveryS3IpFinder">
                        <property name="accessKeyId" value="<YOUR EC2 ACCESS KEY>"/>
                        <property name="secretAccessKey" value="<YOUR EC2 SECRET KEY>"/>
                    </bean>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide TCP discovery SPI (Local network).

            If path to shared file system is not explicitly provided,
            then only local nodes will be able to discover each other.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.sharedfs.GridTcpDiscoverySharedFsIpFinder">
                        <property name="path" value="work/disco/tcp"/>
                    </bean>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide TCP discovery SPI (predefined addresses).
            Use the addresses list to provide IP addresses of initial nodes in the grid
            (at least one address must be provided).
        -->
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.vm.GridTcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <!--
                                    List all IP/port configurations that potentially
                                    can be started first in examples. We are assuming
                                    grid of size 10 or less.
                                -->
                                <value>127.0.0.1:47500</value>
                                <value>127.0.0.1:47501</value>
                                <value>127.0.0.1:47502</value>
                                <value>127.0.0.1:47503</value>
                                <value>127.0.0.1:47504</value>
                                <value>127.0.0.1:47505</value>
                                <value>127.0.0.1:47506</value>
                                <value>127.0.0.1:47507</value>
                                <value>127.0.0.1:47508</value>
                                <value>127.0.0.1:47509</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
</beans>
